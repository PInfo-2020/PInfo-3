# Default values for microservices.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: diges/
  tag: latest
  pullPolicy: Always #IfNotPresent 


kafka:
  zookeeper:
    persistence:
      enabled: false
  persistence:
     enabled: false
  livenessProbe:
     initialDelaySeconds: 120
  readinessProbe:
     initialDelaySeconds: 70


profile-db:
  driver_name: org.postgresql
  persistence:
     enabled: false
  postgresDatabase: profile
  postgresqlDatabase: profile
  postgresUser: "pro"
  postgresPassword: "pro"
  global:
      persistence:
         enabled: false
      postgresqlDatabase: profile
  initdbScriptsConfigMap:
    profile-scripts
  livenessProbe:
     initialDelaySeconds: 120
  readinessProbe:
     initialDelaySeconds: 120


ingredients-db:
  driver_name: org.postgresql
  persistence:
     enabled: false
  postgresDatabase: ingredients
  postgresqlDatabase: ingredients
  postgresUser: "ing"
  postgresPassword: "ing"
  global:
      persistence:
         enabled: false
      postgresqlDatabase: ingredients
  initdbScriptsConfigMap:
    ingred-scripts
  livenessProbe:
     initialDelaySeconds: 120
  readinessProbe:
     initialDelaySeconds: 120

recipes-db:
  driver_name: org.postgresql
  persistence:
     enabled: false
  postgresDatabase: recipes
  postgresqlDatabase: recipes
  postgresUser: "rec"
  postgresPassword: "rec"
  global:
      persistence:
         enabled: false
      postgresqlDatabase: recipes
  initdbScriptsConfigMap:
    rec-scripts
  livenessProbe:
     initialDelaySeconds: 120
  readinessProbe:
     initialDelaySeconds: 120


lists-db:
  driver_name: org.postgresql
  persistence:
     enabled: false
  postgresDatabase: lists
  postgresqlDatabase: lists
  postgresUser: "lis"
  postgresPassword: "lis"
  global:
      persistence:
         enabled: false
      postgresqlDatabase: lists
  initdbScriptsConfigMap:
    lists-scripts
  livenessProbe:
     initialDelaySeconds: 120
  readinessProbe:
     initialDelaySeconds: 120

keycloak:
  keycloak:
    password: asdfghjkl
    extraVolumes: |
      - name: keycloak-realm-secret
        secret:
          secretName: keycloak-realm-secret
    extraVolumeMounts: |
      - name: keycloak-realm-secret
        mountPath: "/realm/"
        readOnly: true
    extraArgs: -Dkeycloak.import=/realm/realm-export.json
    #   livenessProbe: |
    #  initialDelaySeconds: 120
    #readinessProbe: |
    #  initialDelaySeconds: 120


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

rbac:
  create: true
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

